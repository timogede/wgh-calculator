[{"D:\\local-projects\\wgh-calculator\\client\\src\\index.js":"1","D:\\local-projects\\wgh-calculator\\client\\src\\App.js":"2","D:\\local-projects\\wgh-calculator\\client\\src\\components\\MyFooter.js":"3","D:\\local-projects\\wgh-calculator\\client\\src\\components\\MyHeader.js":"4","D:\\local-projects\\wgh-calculator\\client\\src\\Pages\\Impressum.js":"5","D:\\local-projects\\wgh-calculator\\client\\src\\Pages\\Datenschutz.js":"6","D:\\local-projects\\wgh-calculator\\client\\src\\Pages\\Home.js":"7","D:\\local-projects\\wgh-calculator\\client\\src\\components\\Form.js":"8","D:\\local-projects\\wgh-calculator\\client\\src\\components\\MyIntro.js":"9","D:\\local-projects\\wgh-calculator\\client\\src\\components\\Result.js":"10","D:\\local-projects\\wgh-calculator\\client\\src\\components\\Faq.js":"11","D:\\local-projects\\wgh-calculator\\client\\src\\components\\TodoList.js":"12","D:\\local-projects\\wgh-calculator\\client\\src\\components\\EmptyState.js":"13","D:\\local-projects\\wgh-calculator\\client\\src\\components\\Todo.js":"14","D:\\local-projects\\wgh-calculator\\client\\src\\Pages\\RegisterAccount.js":"15","D:\\local-projects\\wgh-calculator\\client\\src\\Pages\\LoginAccount.js":"16"},{"size":448,"mtime":1612787434095,"results":"17","hashOfConfig":"18"},{"size":736,"mtime":1613143824949,"results":"19","hashOfConfig":"18"},{"size":1691,"mtime":1613170627813,"results":"20","hashOfConfig":"18"},{"size":3482,"mtime":1613144199221,"results":"21","hashOfConfig":"18"},{"size":570,"mtime":1612788924191,"results":"22","hashOfConfig":"18"},{"size":42534,"mtime":1613143897103,"results":"23","hashOfConfig":"18"},{"size":8790,"mtime":1613171178028,"results":"24","hashOfConfig":"18"},{"size":4702,"mtime":1613170534909,"results":"25","hashOfConfig":"18"},{"size":461,"mtime":1612788926178,"results":"26","hashOfConfig":"18"},{"size":2043,"mtime":1612788925421,"results":"27","hashOfConfig":"18"},{"size":5870,"mtime":1613144338118,"results":"28","hashOfConfig":"18"},{"size":2610,"mtime":1613170797244,"results":"29","hashOfConfig":"18"},{"size":551,"mtime":1610097002684,"results":"30","hashOfConfig":"18"},{"size":4481,"mtime":1613170768827,"results":"31","hashOfConfig":"18"},{"size":2542,"mtime":1613170812953,"results":"32","hashOfConfig":"18"},{"size":1602,"mtime":1613206033388,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1io7h7p",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\local-projects\\wgh-calculator\\client\\src\\index.js",[],["68","69"],"D:\\local-projects\\wgh-calculator\\client\\src\\App.js",[],"D:\\local-projects\\wgh-calculator\\client\\src\\components\\MyFooter.js",[],"D:\\local-projects\\wgh-calculator\\client\\src\\components\\MyHeader.js",[],"D:\\local-projects\\wgh-calculator\\client\\src\\Pages\\Impressum.js",[],"D:\\local-projects\\wgh-calculator\\client\\src\\Pages\\Datenschutz.js",[],"D:\\local-projects\\wgh-calculator\\client\\src\\Pages\\Home.js",["70","71","72","73","74"],"import React, { useState, useEffect } from \"react\";\r\nimport MyIntro from \"../components/MyIntro.js\";\r\nimport Form from \"../components/Form.js\";\r\nimport TodoList from \"../components/TodoList.js\";\r\nimport Result from \"../components/Result.js\";\r\nimport EmptyState from \"../components/EmptyState.js\";\r\nimport Faq from \"../components/Faq.js\";\r\nimport axios from \"axios\";\r\nimport RegisterAccount from \"./RegisterAccount.js\";\r\nimport LoginAccount from \"./LoginAccount.js\";\r\n\r\nconst Home = () => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [inputSlope, setInputSlope] = useState(\"\");\r\n  const [inputCourseRating, setInputCourseRating] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [sortedTodos, setSortedTodos] = useState([]);\r\n  const [allScores, setAllScores] = useState(\"\");\r\n  const [allCr, setAllCr] = useState(\"\");\r\n  const [allSlope, setAllSlope] = useState(\"\");\r\n  const [allScoreDifferentials, setAllScoreDifferentials] = useState(\"\");\r\n  const [amountOfScores, setAmountOfScores] = useState(\"\");\r\n  const [averageScore, setAverageScore] = useState(\"\");\r\n  const [averageSlope, setAverageSlope] = useState(\"\");\r\n  const [averageCr, setAverageCr] = useState(\"\");\r\n  const [averageScoreDifferential, setAverageScoreDifferential] = useState(\"\");\r\n  const [fullScores, setFullScores] = useState([]);\r\n  const [theHandicap, setTheHandicap] = useState(\"\");\r\n  const [rerender, setRerender] = useState(0);\r\n  // const [fulldata, setFulldata] = useState([]);\r\n\r\n  //This has to be changed\r\n  // const currentlyLoggedIn = 333;\r\n  const url = \"http://localhost:3333\";\r\n\r\n  const scoreCounter = todos.reduce((counter, obj) => {\r\n    if (obj.text) counter += parseInt(obj.text);\r\n    return counter;\r\n  }, 0); // 6\r\n\r\n  const scoreDifferentialCounter = todos.reduce((counter, obj) => {\r\n    if (obj.scoreDifferential)\r\n      counter = counter + parseFloat(obj.scoreDifferential);\r\n    return counter;\r\n  }, 0); // 6\r\n\r\n  const crCounter = todos.reduce((counter, obj) => {\r\n    if (obj.courseRating) counter = counter + parseFloat(obj.courseRating);\r\n    return counter;\r\n  }, 0); // 6\r\n\r\n  const slopeCounter = todos.reduce((counter, obj) => {\r\n    if (obj.slope) counter = counter + parseFloat(obj.slope);\r\n    return counter;\r\n  }, 0); // 6\r\n\r\n  const calcScoreDifferential = (sc, sl, cr) => {\r\n    // let sc = give.text;\r\n    // let sl = give.slope;\r\n    // let cr = give.courseRating;\r\n    let standardSlope = 113;\r\n    let scoreDifferential = (((sc - cr) * standardSlope) / sl).toFixed(1);\r\n\r\n    return scoreDifferential;\r\n  };\r\n\r\n  // const saveLocalTodos = () => {\r\n  //   console.log(\"I pushed todos to MongoDB\");\r\n  //   const newFulldata = {\r\n  //     user_id: 333,\r\n  //     everything: todos,\r\n  //   };\r\n\r\n  //   axios.post(\"http://localhost:3333/create\", newFulldata);\r\n  //   console.log(newFulldata);\r\n  // };\r\n\r\n  const getLocalTodos = () => {\r\n    if (localStorage.getItem(\"todos\") === null) {\r\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    } else {\r\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\r\n      setTodos(todoLocal);\r\n    }\r\n  };\r\n\r\n  const sortFunction = (a, b) => {\r\n    if (a[\"scoreDifferential\"] === b[\"scoreDifferential\"]) {\r\n      return 0;\r\n    } else {\r\n      return parseFloat(a[\"scoreDifferential\"]) <\r\n        parseFloat(b[\"scoreDifferential\"])\r\n        ? -1\r\n        : 1;\r\n    }\r\n  };\r\n\r\n  const sortTodos = (sortthisarray) => {\r\n    const sortedArray = [...sortthisarray];\r\n    sortedArray.sort(sortFunction);\r\n    const cuttedSortedArray = sortedArray.slice(0, 8);\r\n\r\n    setSortedTodos(cuttedSortedArray);\r\n    const fullScoresArray = sortthisarray;\r\n\r\n    for (let y = 0; y < fullScoresArray.length; y++) {\r\n      fullScoresArray[y][\"iamgood\"] = false;\r\n      fullScoresArray[y][\"myrankis\"] = 999;\r\n    }\r\n\r\n    for (let x = 0; x < cuttedSortedArray.length; x++) {\r\n      let searchId = cuttedSortedArray[x][\"id\"];\r\n\r\n      for (let i = 0; i < fullScoresArray.length; i++) {\r\n        if (fullScoresArray[i][\"id\"] === searchId) {\r\n          fullScoresArray[i][\"iamgood\"] = true;\r\n          fullScoresArray[i][\"myrankis\"] = x + 1;\r\n        }\r\n      }\r\n    }\r\n    setFullScores(fullScoresArray);\r\n  };\r\n\r\n  const calculateHandicap = () => {\r\n    let theHandicap = 0;\r\n    for (let i = 0; i < sortedTodos.length; i++) {\r\n      theHandicap =\r\n        theHandicap + parseFloat(sortedTodos[i][\"scoreDifferential\"]);\r\n    }\r\n    theHandicap = (theHandicap / sortedTodos.length).toFixed(1);\r\n\r\n    setTheHandicap(theHandicap);\r\n  };\r\n\r\n  const filterHandler = () => {\r\n    switch (status) {\r\n      case \"best\":\r\n        setFullScores(todos.filter((todo) => todo.iamgood === true));\r\n        break;\r\n      case \"worst\":\r\n        setFullScores(todos.filter((todo) => todo.iamgood === false));\r\n        break;\r\n      default:\r\n        setFullScores(todos);\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const showMe = await axios.get(`${url}/fulldata`);\r\n\r\n      console.log(\"fetchedData: \" + JSON.stringify(showMe.data));\r\n      if (showMe.data == null) {\r\n        console.log(\"i asyncly fetched empty\");\r\n        setTodos([]);\r\n      } else {\r\n        setTodos(showMe.data.everything);\r\n        console.log(\"i asyncly fetched something\");\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const saveToCloud = () => {\r\n      const newFulldata = {\r\n        everything: todos,\r\n      };\r\n      axios.post(\"http://localhost:3333/update\", newFulldata);\r\n      console.log(\"update\");\r\n    };\r\n    if (rerender) {\r\n      saveToCloud();\r\n    }\r\n  }, [rerender]);\r\n\r\n  useEffect(() => {\r\n    filterHandler();\r\n  }, [status, todos, amountOfScores]);\r\n\r\n  useEffect(() => {\r\n    setAmountOfScores(Object.keys(todos).length);\r\n    setAllScores(scoreCounter);\r\n    setAllScoreDifferentials(scoreDifferentialCounter.toFixed(1));\r\n    setAllCr(crCounter.toFixed(1));\r\n    setAllSlope(slopeCounter.toFixed(1));\r\n    sortTodos(todos);\r\n  }, [todos]);\r\n\r\n  useEffect(() => {\r\n    setAverageScore((allScores / amountOfScores).toFixed(1));\r\n    setAverageScoreDifferential(\r\n      (allScoreDifferentials / amountOfScores).toFixed(1)\r\n    );\r\n    setAverageCr((allCr / amountOfScores).toFixed(1));\r\n    setAverageSlope((allSlope / amountOfScores).toFixed(1));\r\n    calculateHandicap();\r\n  }, [amountOfScores]);\r\n\r\n  if (Object.keys(todos).length === 0) {\r\n    return (\r\n      <React.Fragment>\r\n        <RegisterAccount />\r\n        <LoginAccount />\r\n        <MyIntro />\r\n        <Form\r\n          setRerender={setRerender}\r\n          rerender={rerender}\r\n          calcScoreDifferential={calcScoreDifferential}\r\n          setStatus={setStatus}\r\n          setAmountOfScores={setAmountOfScores}\r\n          inputSlope={inputSlope}\r\n          inputCourseRating={inputCourseRating}\r\n          setInputCourseRating={setInputCourseRating}\r\n          setInputSlope={setInputSlope}\r\n          inputText={inputText}\r\n          setInputText={setInputText}\r\n          todos={todos}\r\n          setTodos={setTodos}\r\n        />\r\n        <EmptyState />\r\n        <Faq />\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <RegisterAccount />\r\n        <LoginAccount />\r\n        <MyIntro />\r\n        <Form\r\n          setRerender={setRerender}\r\n          rerender={rerender}\r\n          calcScoreDifferential={calcScoreDifferential}\r\n          setStatus={setStatus}\r\n          setAmountOfScores={setAmountOfScores}\r\n          inputSlope={inputSlope}\r\n          inputCourseRating={inputCourseRating}\r\n          setInputCourseRating={setInputCourseRating}\r\n          setInputSlope={setInputSlope}\r\n          inputText={inputText}\r\n          setInputText={setInputText}\r\n          todos={todos}\r\n          setTodos={setTodos}\r\n        />\r\n        <TodoList\r\n          setRerender={setRerender}\r\n          rerender={rerender}\r\n          setStatus={setStatus}\r\n          setAmountOfScores={setAmountOfScores}\r\n          calcScoreDifferential={calcScoreDifferential}\r\n          fullScores={fullScores}\r\n          todos={todos}\r\n          setTodos={setTodos}\r\n          sortedTodos={sortedTodos}\r\n        />\r\n        <Result\r\n          averageSlope={averageSlope}\r\n          averageCr={averageCr}\r\n          theHandicap={theHandicap}\r\n          averageScoreDifferential={averageScoreDifferential}\r\n          allScoreDifferentials={allScoreDifferentials}\r\n          averageScore={averageScore}\r\n          todos={todos}\r\n          setAllScores={setAllScores}\r\n          allScores={allScores}\r\n          amountOfScores={amountOfScores}\r\n          setAmountOfScores={setAmountOfScores}\r\n        />\r\n        <Faq />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Home;\r\n","D:\\local-projects\\wgh-calculator\\client\\src\\components\\Form.js",[],"D:\\local-projects\\wgh-calculator\\client\\src\\components\\MyIntro.js",[],"D:\\local-projects\\wgh-calculator\\client\\src\\components\\Result.js",[],"D:\\local-projects\\wgh-calculator\\client\\src\\components\\Faq.js",[],"D:\\local-projects\\wgh-calculator\\client\\src\\components\\TodoList.js",[],"D:\\local-projects\\wgh-calculator\\client\\src\\components\\EmptyState.js",[],"D:\\local-projects\\wgh-calculator\\client\\src\\components\\Todo.js",[],"D:\\local-projects\\wgh-calculator\\client\\src\\Pages\\RegisterAccount.js",[],"D:\\local-projects\\wgh-calculator\\client\\src\\Pages\\LoginAccount.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":79,"column":9,"nodeType":"81","messageId":"82","endLine":79,"endColumn":22},{"ruleId":"83","severity":1,"message":"84","line":177,"column":6,"nodeType":"85","endLine":177,"endColumn":16,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":181,"column":6,"nodeType":"85","endLine":181,"endColumn":37,"suggestions":"88"},{"ruleId":"83","severity":1,"message":"89","line":190,"column":6,"nodeType":"85","endLine":190,"endColumn":13,"suggestions":"90"},{"ruleId":"83","severity":1,"message":"91","line":200,"column":6,"nodeType":"85","endLine":200,"endColumn":22,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'getLocalTodos' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'todos'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.",["96"],"React Hook useEffect has missing dependencies: 'crCounter', 'scoreCounter', 'scoreDifferentialCounter', 'slopeCounter', and 'sortTodos'. Either include them or remove the dependency array.",["97"],"React Hook useEffect has missing dependencies: 'allCr', 'allScoreDifferentials', 'allScores', 'allSlope', and 'calculateHandicap'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAverageScore' needs the current value of 'allScores'.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [rerender, todos]",{"range":"107","text":"108"},"Update the dependencies array to be: [status, todos, amountOfScores, filterHandler]",{"range":"109","text":"110"},"Update the dependencies array to be: [crCounter, scoreCounter, scoreDifferentialCounter, slopeCounter, sortTodos, todos]",{"range":"111","text":"112"},"Update the dependencies array to be: [allCr, allScoreDifferentials, allScores, allSlope, amountOfScores, calculateHandicap]",{"range":"113","text":"114"},[5664,5674],"[rerender, todos]",[5728,5759],"[status, todos, amountOfScores, filterHandler]",[6046,6053],"[crCounter, scoreCounter, scoreDifferentialCounter, slopeCounter, sortTodos, todos]",[6393,6409],"[allCr, allScoreDifferentials, allScores, allSlope, amountOfScores, calculateHandicap]"]